name: Java CI with Maven

on:
  push:
    branches: [ "main" ] # main 브랜치에 push가 발생했을 때 동작(트리거)
  pull_request:
    branches: [ "main" ] # main 브랜치에 pull_request가 생성되면 트리거

jobs:
  build:

    runs-on: ubuntu-latest # GitHub Action에서 실행할 운영체제

    steps:
    - uses: actions/checkout@v4 # repository 코드를 checkout(다운로드)
    - name: Set up JDK 17
      uses: actions/setup-java@v4 # JDK 17 설치 
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven # Maven 의존성 캐시 활성화
    - name: Build with Maven
      run: mvn clean install -DskipTests -f ./SpringProjectForJenkins/pom.xml # 빌드 및 의존성 설치( 테스트는 스킵 )
    - name: Update dependency graph
      uses: advanced-security/maven-dependency-submission-action@571e99aab1055c2e71a1e2309b9691de18d6b7d6

    - name: Deploy to Tomcat Server # Tomcat 서버에 war 파일을 배포
    - run: mvn tomcat:deploy -DskipTests -f ./SpringProjectForJenkins/pom.xml || mvn tomcat:redeploy -DskipTests -f ./SpringProjectForJenkins/pom.xml
      env:
        TOMCAT_USERNAME: my #tomcat 사용자명
        TOMCAT_PASSWORD: my #tomcat 비밀번호
        TOMCAT_URL: 'https://duck-robust-recently.ngrok-free.app/manager/text'
